name: Run JPF

on:
  push:

jobs:
  run-jpf:
    name: '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest, windows-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: 0768ddcd7c7bd8b03871486fd5f07ac0bb04d65a
  
    - name: Set up JDK 17 for project
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: maven

    - name: Build project with JDK 17
      run: mvn clean install

    - name: Set up JDK 11 for JPF
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'

    - name: Clone and build jpf-core
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      run: |
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core && git checkout 0916082fac91405e11ec7ce55f9068ce84d61aaa
        ./gradlew buildJars
    - name: Clone and build jpf-core
      if: runner.os == 'Windows'
      run: | 
        git clone https://github.com/javapathfinder/jpf-core.git /tmp/jpf-core
        cd /tmp/jpf-core && git checkout 0916082fac91405e11ec7ce55f9068ce84d61aaa
        ./gradlew.bat buildJars
        
    - name: Run JPF on JAR files
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      shell: bash
      run: |
        #!/bin/bash
        set +e 
        mkdir -p jpf_reports
        directory=$(pwd)
        runjpf_jar="/tmp/jpf-core/build/RunJPF.jar"
        jar_files=$(find "$directory" -type f -name "*.jar")
        for jar_file in $jar_files; do
            if ! unzip -l "$jar_file" 2>/dev/null | grep -q "META-INF/MANIFEST.MF"; then
                continue
            fi
            main_class=$(unzip -p "$jar_file" META-INF/MANIFEST.MF | grep -i 'Main-Class' | awk -F': ' '{print $2}' | tr -d '\r')
            if [ -z "$main_class" ]; then
                continue
            fi
            
            if echo "$main_class" | grep -Eiq 'org\.springframework|io\.quarkus'; then
                continue
            fi
            safe_main_class=$(echo "$main_class" | tr -d '\r' | tr -d '\n' | sed 's/[\/:*?"<>|]/_/g')
            command="java -jar $runjpf_jar +classpath=$jar_file $main_class" 
            $command > "./jpf_reports/${safe_main_class}_jpf_report.txt"
        done
    - name: Run JPF on JAR files
      continue-on-error: true
      if: runner.os == 'Windows'
      shell: cmd 
      run: | 
        @echo off
        setlocal enabledelayedexpansion
        
        mkdir jpf_reports
        
        set "directory=%cd%"
        set "runjpf_jar=C:\path\to\jpf-core\build\RunJPF.jar"
        
        for /r %%i in (*.jar) do (
            echo %%i | findstr /i "SNAPSHOT" >nul 2>&1
            if !errorlevel! neq 0 (
                jar tf "%%i" | findstr /i "META-INF\MANIFEST.MF" >nul 2>&1
                if !errorlevel! equ 0 (
                    mkdir META-INF 2>nul
                    jar xf "%%i" META-INF/MANIFEST.MF
                    if exist META-INF\MANIFEST.MF (
                        for /f "tokens=2 delims=: " %%j in ('findstr /i "Main-Class" META-INF\MANIFEST.MF') do (
                            set "main_class=%%j"
                            set "main_class=!main_class: =!"
                            set "main_class=!main_class:"=!%%"
                            
                            echo !main_class! | findstr /i /r "org\.springframework\|io\.quarkus" >nul 2>&1
                            if !errorlevel! neq 0 (
                                java -jar "%runjpf_jar%" +classpath="%%i" !main_class! > "jpf_reports\!main_class!_jpf_report.txt"
                            )
                        )
                    )
                    rmdir /s /q META-INF
                )
            )
        )
        
        endlocal
    - name: Upload JPF reports
      if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
      uses: actions/upload-artifact@v4
      with:
        name: jpf-report-${{ github.event.repository.name}}-on-${{ matrix.os }}-from_branch_${{ github.ref_name }}
        path: './jpf_reports/*'

    - name: Upload JPF reports
      if: ${{ runner.os == 'Windows' }}
      uses: actions/upload-artifact@v4
      with:
        name: jpf-report-${{ github.event.repository.name }}-on-${{ matrix.os }}-from_branch_${{ github.ref_name }}
        path: 'jpf_reports'
